# Generated by Django 4.2.23 on 2025-08-06 19:48

from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.contrib.forms.models
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        ('home', '0002_create_homepage'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, validators=[wagtail.contrib.forms.models.validate_to_address], verbose_name='to address')),
                ('from_address', models.EmailField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('gracias', wagtail.fields.RichTextField(blank=True, help_text='Mensaje de agradecimiento tras enviar formulario')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ProyectosIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Introducción para la sección de proyectos')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ServiciosPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('descripcion', wagtail.fields.RichTextField(blank=True, help_text='Descripción general de los servicios')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='homepage',
            name='cta_enlace',
            field=models.URLField(blank=True, help_text='URL del botón de llamada a la acción'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='cta_texto',
            field=models.CharField(blank=True, help_text='Texto del botón de llamada a la acción', max_length=100),
        ),
        migrations.AddField(
            model_name='homepage',
            name='imagen_destacada',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image'),
        ),
        migrations.AddField(
            model_name='homepage',
            name='introduccion',
            field=wagtail.fields.RichTextField(blank=True),
        ),
        migrations.AddField(
            model_name='homepage',
            name='subtitulo',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.CreateModel(
            name='ServiciosItem',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('titulo', models.CharField(help_text='Nombre del servicio', max_length=255)),
                ('descripcion', models.TextField(help_text='Descripción del servicio')),
                ('enlace', models.URLField(blank=True, help_text='Enlace para más información (opcional)')),
                ('icono', models.ForeignKey(blank=True, help_text='Ícono representativo del servicio', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ProyectoPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('cliente', models.CharField(blank=True, help_text='Nombre del cliente', max_length=255)),
                ('resumen', wagtail.fields.RichTextField(blank=True, help_text='Resumen del proyecto')),
                ('tecnologias', wagtail.fields.StreamField([('tecnologia', wagtail.blocks.CharBlock(help_text='Tecnología usada'))], blank=True, help_text='Lista de tecnologías usadas en este proyecto', use_json_field=True)),
                ('fecha', models.DateField(help_text='Fecha de realización o entrega')),
                ('enlace_demo', models.URLField(blank=True, help_text='Enlace a demo en vivo o repositorio')),
                ('imagen', models.ForeignKey(blank=True, help_text='Imagen destacada del proyecto', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='home.contactpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('biografia', wagtail.fields.RichTextField(blank=True, help_text='Texto biográfico sobre tu experiencia y trayectoria')),
                ('anios_experiencia', models.PositiveIntegerField(default=0, help_text='Años de experiencia profesional')),
                ('tecnologias_destacadas', wagtail.fields.StreamField([('tecnologia', wagtail.blocks.CharBlock(help_text='Nombre de la tecnología destacada', required=True))], blank=True, help_text='Lista de tecnologías que dominas o usas frecuentemente', use_json_field=True)),
                ('imagen_perfil', models.ForeignKey(blank=True, help_text='Imagen de perfil profesional', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
